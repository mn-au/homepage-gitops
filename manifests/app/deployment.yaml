apiVersion: apps/v1
kind: Deployment
metadata:
  name: homepage
  namespace: default
  labels: { app.kubernetes.io/name: homepage }
spec:
  replicas: 1
  selector:
    matchLabels: { app.kubernetes.io/name: homepage }
  template:
    metadata:
      labels: { app.kubernetes.io/name: homepage }
    spec:
      serviceAccountName: homepage

      # Init using the SAME image so /app/src/skeleton exists
      initContainers:
        - name: init-config
          image: ghcr.io/gethomepage/homepage:latest
          command: ["/bin/sh","-c"]
          args:
            - |
              set -eux
              echo "[init-config] preparing /app/config ..."
              # Ensure writable target
              mkdir -p /app/config
              # Clean any leftovers (incl. stale symlinks)
              rm -rf /app/config/* || true

              # 1) Copy from ConfigMap (dereference symlinks)
              if [ -d /config-src ] && [ "$(ls -A /config-src 2>/dev/null || true)" ]; then
                echo "[init-config] cp -RL /config-src/* -> /app/config/"
                cp -RL /config-src/* /app/config/ 2>/dev/null || true
              fi

              # 2) Ensure required files exist via skeleton fallback
              for f in settings.yaml services.yaml widgets.yaml kubernetes.yaml; do
                if [ ! -f "/app/config/$f" ]; then
                  echo "[init-config] $f missing; copying from skeleton"
                  cp -L "/app/src/skeleton/$f" "/app/config/$f"
                else
                  echo "[init-config] found /app/config/$f"
                fi
              done

              # 3) Ensure logs dir (writable)
              mkdir -p /app/config/logs
              echo "[init-config] final contents:"
              ls -lA /app/config
          volumeMounts:
            - name: cfg-src
              mountPath: /config-src
            - name: cfg
              mountPath: /app/config

      containers:
        - name: homepage
          image: ghcr.io/gethomepage/homepage:latest
          ports:
            - name: http
              containerPort: 3000
          env:
            - name: HOMEPAGE_ALLOWED_HOSTS
              value: "localhost:9999,localhost:8888,127.0.0.1:9999,127.0.0.1:8888,localhost,127.0.0.1"
          volumeMounts:
            - name: cfg
              mountPath: /app/config

      volumes:
        # Read-only source from ConfigMap (your custom config)
        - name: cfg-src
          configMap:
            name: homepage
        # Writable target used by init + app
        - name: cfg
          emptyDir: {}
